(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{727:function(t,e,a){"use strict";a.r(e);var s=a(1),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"multistore-and-keepers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multistore-and-keepers"}},[t._v("#")]),t._v(" Multistore and Keepers")]),t._v(" "),a("HighlightBox",{attrs:{type:"synopsis"}},[a("p",[t._v("It is time to address multistore and keeper. Before you begin, take a look at the following sections:")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/academy/2-main-concepts/transactions.html"}},[t._v("Transactions")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/academy/2-main-concepts/messages.html"}},[t._v("Messages")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/academy/2-main-concepts/modules.html"}},[t._v("Modules")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/academy/2-main-concepts/protobuf.html"}},[t._v("Protobuf")])],1)]),t._v(" "),a("p",[t._v("You can find a code example for your checkers blockchain at the end of the section to explore dealing with storage elements, message handling, and gas costs.")])]),t._v(" "),a("p",[t._v("A Cosmos SDK application on an application-specific blockchain usually consists of several modules attending to separate concerns. Each module has a state that is a subset of the entire application state.")]),t._v(" "),a("p",[t._v("The Cosmos SDK adopts an object-capabilities-based approach to help developers better protect their application from unwanted inter-module interactions. Keepers are at the core of this approach.")]),t._v(" "),a("p",[t._v("A keeper is a Cosmos SDK abstraction that manages access to the subset of the state defined by a module. All access to the module's data must go through the module's keeper.")]),t._v(" "),a("p",[t._v("A keeper can be thought of quite literally as the gatekeeper of a module's store(s). Each store, typically an IAVL store, defined within a module comes with a "),a("code",[t._v("storeKey")]),t._v(". The "),a("code",[t._v("storeKey")]),t._v(" grants unlimited access to it. The module's keeper holds this "),a("code",[t._v("storeKey")]),t._v(", which should otherwise remain unexposed, and defines methods for reading and writing to the store(s).")]),t._v(" "),a("p",[t._v("When a module needs to interact with the state defined in another module, it does so by interacting with the methods of the other module’s keeper. Developers control the interactions their module can have with other modules by defining methods and controlling access.")]),t._v(" "),a("p",[a("a",{attrs:{href:"~@images/keeper.png"}},[t._v("Keepers in the Cosmos SDK")])]),t._v(" "),a("h2",{attrs:{id:"format"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#format"}},[t._v("#")]),t._v(" Format")]),t._v(" "),a("p",[t._v("Keepers are generally defined in a "),a("code",[t._v("/keeper/keeper.go")]),t._v(" file located in the module’s folder. The type keeper of a module is named simply "),a("code",[t._v("keeper.go")]),t._v(" by convention. It usually follows the following structure:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Keeper "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Expected external keepers, if any")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Store key(s)")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// codec")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),a("p",[t._v("The following parameters are of importance concerning the type definitions of keepers in modules:")]),t._v(" "),a("ul",[a("li",[t._v("An expected "),a("code",[t._v("keeper")]),t._v(" is a keeper external to a module that is required by the internal keeper of said module. External keepers are listed in the internal keeper's type definition as interfaces. These interfaces are themselves defined in an "),a("code",[t._v("expected_keepers.go")]),t._v(" file in the root of the module's folder. Interfaces are used to reduce the number of dependencies and to facilitate the maintenance of the module itself in this context.")]),t._v(" "),a("li",[a("code",[t._v("storeKeys")]),t._v(" grant access to the store(s) of the multistore managed by the module. They should always remain unexposed to external modules.")]),t._v(" "),a("li",[a("code",[t._v("cdc")]),t._v(" is the codec used to marshal and unmarshal structs to/from []byte. The "),a("code",[t._v("cdc")]),t._v(" can be "),a("code",[t._v("codec.BinaryCodec")]),t._v(", "),a("code",[t._v("codec.JSONCodec")]),t._v(", or "),a("code",[t._v("codec.Codec")]),t._v(" based on your requirements. Note that "),a("code",[t._v("code.Codec")]),t._v(" includes the other interfaces. It can be either a proto or amino codec as long as they implement these interfaces.")])]),t._v(" "),a("p",[t._v("Each keeper has its own constructor function, which is called from the application's constructor function. This is where keepers are instantiated and where developers make sure to pass correct instances of the module's keepers to other modules that require them.")]),t._v(" "),a("h3",{attrs:{id:"scope-and-best-practices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scope-and-best-practices"}},[t._v("#")]),t._v(" Scope and best practices")]),t._v(" "),a("p",[t._v("Keepers primarily expose getter and setter methods for the store(s) managed by their module. Methods should remain simple and strictly limited to getting or setting the requested value. Validity checks should already have been done with the "),a("code",[t._v("ValidateBasic()")]),t._v(" method of the message and the "),a("code",[t._v("Msg")]),t._v(" server before the keeper's methods are called.")]),t._v(" "),a("p",[t._v("Getter and setter method usually have the following signatures:")]),t._v(" "),a("ul",[a("li",[t._v("The getter method has the signature "),a("code",[t._v("func (k Keeper) Get(ctx sdk.Context, key string) returnType")]),t._v(".")]),t._v(" "),a("li",[t._v("The setter method has the signature "),a("code",[t._v("func (k Keeper) Set(ctx sdk.Context, key string, value valueType)")]),t._v(".")])]),t._v(" "),a("p",[t._v("Keepers primarily expose getter and setter methods for the store(s) managed by their module. Methods should remain simple and strictly limited to getting or setting the requested value. Validity checks should already have been done with the "),a("code",[t._v("ValidateBasic()")]),t._v(" method of the message and the "),a("code",[t._v("Msg")]),t._v(" server before the keeper's methods are called.")]),t._v(" "),a("p",[t._v("The getter method will typically have the following signature:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k Keeper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value returnType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" found "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("The setter method will typically have the following signature:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k Keeper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value valueType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Keepers also should implement an iterator method with the following signature when appropriate:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k Keeper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("returnType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),t._v(" "),a("h2",{attrs:{id:"store-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#store-types"}},[t._v("#")]),t._v(" Store types")]),t._v(" "),a("p",[t._v("The Cosmos SDK offers different store types to work with. It is important to gain a good overview of different store types available for development.")]),t._v(" "),a("h3",{attrs:{id:"kvstore-and-multistore-in-cosmos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kvstore-and-multistore-in-cosmos"}},[t._v("#")]),t._v(" "),a("code",[t._v("KVStore")]),t._v(" and "),a("code",[t._v("Multistore")]),t._v(" in Cosmos")]),t._v(" "),a("p",[t._v("Each Cosmos SDK application contains a state at its root, the "),a("code",[t._v("Multistore")]),t._v(". It is subdivided into separate compartments managed by each module in the application. The "),a("code",[t._v("Multistore")]),t._v(" is a store of "),a("code",[t._v("KVStore")]),t._v("s that follows the "),a("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/v0.40.0-rc6/store/types/store.go#L104-L133",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Multistore interface")]),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("The base "),a("code",[t._v("KVStore")]),t._v(" and "),a("code",[t._v("Multistore")]),t._v(" implementations are wrapped in extensions that offer specialized behavior. A "),a("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/v0.40.0-rc6/store/types/store.go#L141-L184",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("CommitMultistore")]),a("OutboundLink")],1),t._v(" is a "),a("code",[t._v("Multistore")]),t._v(" with a committer. This is the main type of multistore used in the Cosmos SDK. The underlying "),a("code",[t._v("KVStore")]),t._v(" is used primarily to restrict access to the committer.")]),t._v(" "),a("p",[t._v("The "),a("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/v0.40.0-rc6/store/rootmulti/store.go#L43-L61",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("rootMulti.Store")]),a("OutboundLink")],1),t._v(" is the go-to implementation of the "),a("code",[t._v("CommitMultiStore")]),t._v(" interface. It is a base-layer multistore built around a database on top of which multiple "),a("code",[t._v("KVStore")]),t._v("s can be mounted. It is the default multistore store used in "),a("code",[t._v("BaseApp")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"cachemultistore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cachemultistore"}},[t._v("#")]),t._v(" "),a("code",[t._v("CacheMultistore")])]),t._v(" "),a("p",[t._v("A "),a("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/v0.40.0-rc6/store/cachemulti/store.go#L17-L28",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("cachemulti.Store")]),a("OutboundLink")],1),t._v(" is used whenever the "),a("code",[t._v("rootMulti.Store")]),t._v(" needs to be branched. "),a("code",[t._v("cachemulti.Store")]),t._v(" branches all substores, creates a virtual store for each substore, in its constructor and holds them in "),a("code",[t._v("Store.stores")]),t._v(". This is used primarily to create an isolated store, typically when it is necessary to mutate the state but it might be reverted later.")]),t._v(" "),a("p",[a("code",[t._v("CasheMultistore")]),t._v(" caches all read queries. "),a("code",[t._v("Store.GetKVStore()")]),t._v(" returns the store from "),a("code",[t._v("Store.stores")]),t._v(", and "),a("code",[t._v("Store.Write()")]),t._v(" recursively calls "),a("code",[t._v("CacheWrap.Write()")]),t._v(" on all substores.")]),t._v(" "),a("h3",{attrs:{id:"transient-store"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transient-store"}},[t._v("#")]),t._v(" Transient store")]),t._v(" "),a("p",[t._v("As the name suggests, "),a("code",[t._v("Transient.Store")]),t._v(" is a "),a("code",[t._v("KVStore")]),t._v(" that is discarded automatically at the end of each block. "),a("code",[t._v("Transient.Store")]),t._v(" is a "),a("code",[t._v("dbadapter.Store")]),t._v(" with a "),a("code",[t._v("dbm.NewMemDB()")]),t._v(". All "),a("code",[t._v("KVStore")]),t._v(" methods are reused. A new "),a("code",[t._v("dbadapter.Store")]),t._v(" is assigned when "),a("code",[t._v("Store.Commit()")]),t._v(" is called, discarding the previous reference. Garbage collection is attended to automatically.")]),t._v(" "),a("HighlightBox",{attrs:{type:"tip"}},[a("p",[t._v("Why not take a closer look at the "),a("a",{attrs:{href:"https://github.com/cosmos/iavl/blob/v0.15.0-rc5/docs/overview.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("IAVL spec"),a("OutboundLink")],1),t._v(" when working with the IAVL store?")]),t._v(" "),a("p",[t._v("The default implementation of "),a("code",[t._v("KVStore")]),t._v(" and "),a("code",[t._v("CommitKVStore")]),t._v(" is the "),a("code",[t._v("IAVL.Store")]),t._v(". The "),a("code",[t._v("IAVL.Store")]),t._v(" is a self-balancing binary search tree that ensures get and set operations are "),a("code",[t._v("O(log n)")]),t._v(", where "),a("code",[t._v("n")]),t._v(" is the number of elements in the tree.")])]),t._v(" "),a("h2",{attrs:{id:"additional-kvstore-wrappers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#additional-kvstore-wrappers"}},[t._v("#")]),t._v(" Additional KVStore wrappers")]),t._v(" "),a("p",[t._v("Beside the above store types, there are a few others with more specific usage.")]),t._v(" "),a("h3",{attrs:{id:"gaskv-store"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gaskv-store"}},[t._v("#")]),t._v(" GasKv store")]),t._v(" "),a("p",[t._v("Cosmos SDK applications use gas to track resources usage and prevent spam. The "),a("code",[t._v("GasKv.Store")]),t._v(" is a "),a("code",[t._v("KVStore")]),t._v(" wrapper that enables automatic gas consumption each time a read or write to the store is made. It is the solution of choice to track storage usage in Cosmos SDK applications.")]),t._v(" "),a("p",[a("code",[t._v("GasKv.Store")]),t._v(" automatically consumes the appropriate amount of gas depending on the "),a("code",[t._v("Store.gasConfig")]),t._v(" when methods of the parent "),a("code",[t._v("KVStore")]),t._v(" are called. All "),a("code",[t._v("KVStores")]),t._v(" are wrapped in "),a("code",[t._v("GasKv.Stores")]),t._v(" by default when retrieved. This is done in the "),a("code",[t._v("KVStore()")]),t._v(" method of the context. The default gas configuration is used in this case.")]),t._v(" "),a("h3",{attrs:{id:"tracekv-store"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tracekv-store"}},[t._v("#")]),t._v(" TraceKv store")]),t._v(" "),a("p",[a("code",[t._v("tracekv.Store")]),t._v(" is a wrapper "),a("code",[t._v("KVStore")]),t._v(", which provides operation tracing functionalities over the underlying "),a("code",[t._v("KVStore")]),t._v(". It is applied automatically by the Cosmos SDK on all "),a("code",[t._v("KVStore")]),t._v("s if tracing is enabled on the parent "),a("code",[t._v("MultiStore")]),t._v(".\nWhen each of the "),a("code",[t._v("KVStore")]),t._v(" methods are called, "),a("code",[t._v("tracekv.Store")]),t._v(" automatically logs "),a("code",[t._v("traceOperation")]),t._v(" to the "),a("code",[t._v("Store.writer")]),t._v(". "),a("code",[t._v("traceOperation.Metadata")]),t._v(" is filled with "),a("code",[t._v("Store.context")]),t._v(" when it is not nil. "),a("code",[t._v("TraceContext")]),t._v(" is a "),a("code",[t._v("map[string]interface{}")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"prefix-store"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prefix-store"}},[t._v("#")]),t._v(" Prefix store")]),t._v(" "),a("p",[a("code",[t._v("prefix.Store")]),t._v(" is a wrapper "),a("code",[t._v("KVStore")]),t._v(" which provides automatic key-prefixing functionalities over the underlying "),a("code",[t._v("KVStore")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("When "),a("code",[t._v("Store.{Get, Set}()")]),t._v(" is called, the store forwards the call to its parent with the key prefixed with the "),a("code",[t._v("Store.prefix")]),t._v(".")]),t._v(" "),a("li",[t._v("When "),a("code",[t._v("Store.Iterator()")]),t._v(" is called, it does not simply prefix the "),a("code",[t._v("Store.prefix")]),t._v(" since it does not work as intended. Some of the elements are traversed even when they are not starting with the prefix in this case.")])]),t._v(" "),a("h2",{attrs:{id:"antehandler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#antehandler"}},[t._v("#")]),t._v(" "),a("code",[t._v("AnteHandler")])]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("AnteHandler")]),t._v(" is a special handler that implements the "),a("code",[t._v("AnteHandler")]),t._v(" interface. It is used to authenticate the transaction before the transaction's internal messages are processed.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("AnteHandler")]),t._v(" is theoretically optional but still a very important component of public blockchain networks. It serves three primary purposes:")]),t._v(" "),a("ul",[a("li",[t._v("It is a primary line of defense against spam and the second line of defense - the first one being the mempool - against transaction replay with fees deduction and sequence checking.")]),t._v(" "),a("li",[t._v("Perform preliminary stateful validity checks like ensuring signatures are valid or that a sender has enough funds to pay for fees.")]),t._v(" "),a("li",[t._v("Play a role in the incentivization of stakeholders via the collection of transaction fees.")])]),t._v(" "),a("p",[a("code",[t._v("BaseApp")]),t._v(" holds an "),a("code",[t._v("AnteHandler")]),t._v(" as a parameter that is initialized in the application's constructor. The most widely used "),a("code",[t._v("AnteHandler")]),t._v(" is the auth module.")]),t._v(" "),a("HighlightBox",{attrs:{type:"info"}},[a("p",[t._v("For more information on the subject, a closer look at the following resources could prove worth it:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/master/docs/basics/gas-fees.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cosmos SDK documentation: Gas and Fees"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/master/docs/basics/gas-fees.md#antehandler",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cosmos SDK documentation: AnteHandler"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"next-up"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#next-up"}},[t._v("#")]),t._v(" Next up")]),t._v(" "),a("p",[t._v("In the "),a("RouterLink",{attrs:{to:"/academy/2-main-concepts/base-app.html"}},[t._v("next section")]),t._v(", you will find more information on "),a("code",[t._v("BaseApp")]),t._v(" and its role in the Cosmos SDK.")],1),t._v(" "),a("ExpansionPanel",{attrs:{title:"Show me some code for my checkers blockchain"}},[a("p",[t._v("In the "),a("RouterLink",{attrs:{to:"/academy/2-main-concepts/accounts.html"}},[t._v("Accounts section")]),t._v(", you were introduced to the elements of the stored game but were left in the dark about where this game is stored. In light of what you learned above, fix that.")],1),t._v(" "),a("h2",{attrs:{id:"game-object-in-storage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#game-object-in-storage"}},[t._v("#")]),t._v(" Game object in storage")]),t._v(" "),a("p",[t._v("You need to decide under what structure you want to store a game in the storage. The Cosmos SDK partitions the global storage per module with "),a("code",[t._v("checkers")]),t._v(" being its own module. You need to take care of how to store games in the checkers module's corner of the key/value pair storage.")]),t._v(" "),a("p",[t._v("The first idea would be to attribute a unique ID to a game and to store the game value at that ID. For the sake of clarity and to be able to differentiate with other stored elements in the future, you ought to add a prefix to that ID. The storage structure would look like this:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Pseudo-code")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" globalStore sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("KVStore\ncheckersStore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" globalStore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAtPrefix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"checkers-"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngamesStore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" checkersStore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAtPrefix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"games-"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstoredGame "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" gamesStore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAtPrefix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gameId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Or again in a different way")]),t._v("\nstoredGame "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" globalStore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAtPrefix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"checkers-games-"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" gameId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("It is pseudo-code because:")]),t._v(" "),a("ul",[a("li",[t._v("Prefixes have to be "),a("code",[t._v("byte[]")]),t._v(" instead of "),a("code",[t._v("string")]),t._v(". This is easily handled with a cast such as "),a("code",[t._v('[]byte("games-")')]),t._v(".")]),t._v(" "),a("li",[t._v("The Cosmos SDK prevents you from directly accessing any random module's store, such that "),a("code",[t._v('globalStore.getAtPrefix("checkers-")')]),t._v(" is not allowed and instead has to be accessed via a secret key.")])]),t._v(" "),a("p",[t._v("Define the ID of the "),a("code",[t._v("StoredGame")]),t._v(". To return a single object, we include "),a("code",[t._v("StoredGame")]),t._v(" in the object's value:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" StoredGame "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    Index "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("With most of the action handled by the Cosmos SDK, you are left with defining the required prefixes in your corner of the storage:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" types\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    StoredGameKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"StoredGame-value-"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Which assists you with accessing a game:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" keeper\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/cosmos/cosmos-sdk/store/prefix"')]),t._v("\n    sdk "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/cosmos/cosmos-sdk/store/types"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/alice/checkers/x/checkers/types"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k Keeper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetStoredGame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gameId "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("storedGame types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StoredGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" found "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    checkersStore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("KVStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    gamesStore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" prefix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("checkersStore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StoredGameKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    gameBytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" gamesStore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gameId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" gameBytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cdc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MustUnmarshalBinaryBare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gameBytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("storedGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" storedGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("If you want to save a game:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k Keeper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetStoredGame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" storedGame types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StoredGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    checkersStore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("KVStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    gamesStore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" prefix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("checkersStore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StoredGameKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    gameBytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cdc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MustMarshalBinaryBare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("storedGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    gamesStore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("storedGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gameBytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("If you want to delete a stored game, you would call "),a("code",[t._v("gamesStore.Delete(byte[](storedGame.Index))")]),t._v(".")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("KVStore")]),t._v(" allows you to obtain an iterator on a given prefix. You can list all stored games because all stored games share the same prefix, which you would do with:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k Keeper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetAllStoredGame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StoredGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    checkersStore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("KVStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    gamesStore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" prefix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("checkersStore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StoredGameKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    iterator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("KVStorePrefixIterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gamesStore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// []byte{} is an empty array")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Think of it as: try { everything below } finally { iterator.Close() }")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Valid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" storedGame types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StoredGame\n        k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cdc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MustUnmarshalBinaryBare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("storedGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" storedGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Notice the "),a("code",[t._v("MustMarshalBinaryBare")]),t._v(" and "),a("code",[t._v("MustUnmarshalBinaryBare")]),t._v(" functions in the "),a("code",[t._v("codec")]),t._v(" above. They need to be instructed on how to proceed with the marshaling. Protobuf took care of this for you.")]),t._v(" "),a("HighlightBox",{attrs:{type:"tip"}},[a("p",[t._v("See the "),a("RouterLink",{attrs:{to:"/academy/2-main-concepts/protobuf.html"}},[t._v("previous section on Protobuf")]),t._v(" to explore how Protobuf deals with the marshaling.")],1)]),t._v(" "),a("h2",{attrs:{id:"boilerplate-boilerplate-everywhere"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boilerplate-boilerplate-everywhere"}},[t._v("#")]),t._v(" Boilerplate, boilerplate everywhere!")]),t._v(" "),a("p",[t._v("Also notice how the "),a("code",[t._v("Set")]),t._v(", "),a("code",[t._v("Get")]),t._v(", "),a("code",[t._v("Remove")]),t._v(", and "),a("code",[t._v("GetAll")]),t._v(" functions above look like boilerplate too. Do you have to redo these functions for every type? You do not. It was all created with this Starport command:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ starport scaffold map storedGame game turn red black wager:uint --module checkers --no-message\n")])])]),a("p",[t._v("Where "),a("code",[t._v("map")]),t._v(" is the command that tells Starport to add an "),a("code",[t._v("Index")]),t._v(" and store all elements under a map-like structure.")]),t._v(" "),a("HighlightBox",{attrs:{type:"tip"}},[a("p",[t._v("To create the above boilerplate in your module, you can use Starport. For Starport and if you want to go beyond these out-of-context code samples to see more in detail how to define all this, head to "),a("RouterLink",{attrs:{to:"/academy/4-my-own-chain/"}},[t._v("My Own Chain")]),t._v(".")],1)]),t._v(" "),a("h2",{attrs:{id:"other-storage-elements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#other-storage-elements"}},[t._v("#")]),t._v(" Other storage elements")]),t._v(" "),a("p",[t._v("How do we create this "),a("code",[t._v("storedGame.Index")]),t._v("? A viable idea is to keep a counter in storage for the next game. Unlike "),a("code",[t._v("StoredGame")]),t._v(", which is saved as a map, this "),a("code",[t._v("NextGame")]),t._v(" object has to be at a unique location in the storage.")]),t._v(" "),a("p",[t._v("We define the object:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" types\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" NextGame "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    IdValue "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Plus, the key where it resides:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    NextGameKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NextGame-value-"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Then the functions to get and set:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k Keeper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetNextGame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextGame types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NextGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    nextGameStore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" prefix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("KVStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("KeyPrefix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NextGameKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    nextBytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cdc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MustMarshalBinaryBare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("nextGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    nextGameStore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextBytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Not to forget that it needs an initial value, which is the role of the genesis block definition:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" GenesisState "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    StoredGameList "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("StoredGame\n    NextGame "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("NextGame\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("And its initialization:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("DefaultGenesis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("GenesisState "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("GenesisState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        StoredGameList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("StoredGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Starts empty")]),t._v("\n        NextGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("NextGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            IdValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("uint64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Starts at 0")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"what-about-message-handling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-about-message-handling"}},[t._v("#")]),t._v(" What about message handling")]),t._v(" "),a("p",[t._v("You defined the "),a("code",[t._v("MsgCreateGame")]),t._v(" in an earlier "),a("RouterLink",{attrs:{to:"/academy/2-main-concepts/messages.html"}},[t._v("section on messages")]),t._v(".\nYou go from the message to the game in storage with the "),a("code",[t._v("MsgCreateGame")]),t._v(". That is also the role of the keeper. You should define a handling function such as:")],1),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k Keeper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateGame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("goCtx context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MsgCreateGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MsgCreateGameResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ctx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UnwrapSDKContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("goCtx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO: Handle the message")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MsgCreateGameResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("It looks like you now have all the pieces to replace the "),a("code",[t._v("TODO")]),t._v(", which turns out to be straightforward.")]),t._v(" "),a("p",[t._v("Get the next game ID:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    nextGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" found "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetNextGame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("found "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Panic because this should never happen.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NextGame not found"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    newIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" strconv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FormatUint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IdValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Extract and sanitize the message elements:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    creator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AccAddressFromBech32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Creator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" errors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Creator address invalid"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AccAddressFromBech32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Standard error because users can make mistakes.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" errors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Red address invalid"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AccAddressFromBech32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" errors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Black address invalid"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Create the stored game object:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    storedGame "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StoredGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Creator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Creator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   newIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Game"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    rules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Black"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Wager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Wager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Save it in storage:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetStoredGame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" storedGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Prepare for the next created game:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    nextGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IdValue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n    k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetNextGame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Return the game ID for reference:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MsgCreateGameResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        IdValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" newIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n")])])]),a("p",[t._v("You would do the same for "),a("code",[t._v("MsgPlayMoveResponse")]),t._v(" and "),a("code",[t._v("MsgRejectGame")]),t._v(". Why not try it out as an exercise?")]),t._v(" "),a("h2",{attrs:{id:"more-on-game-theory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#more-on-game-theory"}},[t._v("#")]),t._v(" More on game theory")]),t._v(" "),a("p",[t._v("Time to introduce a game deadline:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    MaxTurnDurationInSeconds "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Duration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("_600 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("_000_000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 day")]),t._v("\n    DeadlineLayout           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2006-01-02 15:04:05.999999999 +0000 UTC"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" StoredGame "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    Deadline "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Set its initial value on creation:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("storedGame "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StoredGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    Deadline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BlockTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxTurnDurationInSeconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UTC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DeadlineLayout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Update its value after a move:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("storedGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Deadline "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BlockTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxTurnDurationInSeconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UTC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DeadlineLayout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Extract and verify its value when necessary:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("deadline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DeadlineLayout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" storedGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Deadline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" deadline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Before")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BlockTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"how-to-expire-games"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-expire-games"}},[t._v("#")]),t._v(" How to expire games")]),t._v(" "),a("p",[t._v("When do you verify that a game has expired? An interesting feature of an ABCI application is that you can have it perform some actions at the end of each block. Should you load all games and filter for those that have expired? That would be extremely expensive. Better keep a First-In-First-Out (FIFO) where fresh games are pushed back to the tail so that the head contains the next games to expire.")]),t._v(" "),a("p",[t._v("In the context of the Cosmos SDK, you need to keep track of where the FIFO starts and stops by saving the corresponding game IDs:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    NoFifoIdKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-1"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" NextGame "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    FifoHead "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    FifoTail "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("And to have each game know its relative position and the number of moves done to assist the refunding logic on games with zero, one, or more than two moves:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" StoredGame "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    MoveCount "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v("\n    BeforeId  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    AfterId   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Next, you need to code a regular FIFO, whereby:")]),t._v(" "),a("ul",[a("li",[t._v("Games are sent to the back when created or played on.")]),t._v(" "),a("li",[t._v("Games are removed from the FIFO when they are finished or time out.")])]),t._v(" "),a("h2",{attrs:{id:"when-to-expire-games"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#when-to-expire-games"}},[t._v("#")]),t._v(" When to expire games")]),t._v(" "),a("p",[t._v("Since you want to expire the games that have timed out at the end of a block, you need to hook your keeper to the right call. The Cosmos SDK will call at various points into each module when building the whole application. The function it calls at each block's end looks like this:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("am AppModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("EndBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" abci"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RequestEndBlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("abci"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ValidatorUpdate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("abci"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ValidatorUpdate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("This is where you write the necessary code, preferably in the keeper. For instance with:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("am"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keeper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ForfeitExpiredGames")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("WrapSDKContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Those among you with a well-placed paranoia must be asking whether you can ensure that the execution of this "),a("code",[t._v("EndBlock")]),t._v(" does not become prohibitively expensive. The number of games to potentially expire is unbounded after all, which is a recipe for disaster in the blockchain world. Is there a situation or an attack vector that would make this a possibility? And what can you do to prevent it?")]),t._v(" "),a("p",[t._v("The timeout duration is fixed and is the same for all games. This means that the "),a("code",[t._v("n")]),t._v(" games that expire in a given block have all been created or updated at roughly the same time or roughly the same block height "),a("code",[t._v("h")]),t._v(", give or take a margin of error "),a("code",[t._v("h-1")]),t._v(" and "),a("code",[t._v("h+1")]),t._v(". These created and updated games are limited in number because as per one of the chain consensus parameters every block has a maximum size and a limited number of transactions it can include. If by any chance all games in blocks "),a("code",[t._v("h-1")]),t._v(", "),a("code",[t._v("h")]),t._v(", and "),a("code",[t._v("h+1")]),t._v(" expire now, then the "),a("code",[t._v("EndBlock")]),t._v(" function would have to expire three times as many games as a block can handle. This is the worst-case scenario but it still sounds manageable.")]),t._v(" "),a("p",[t._v("You should be careful about letting the game creator pick a timeout duration. It could open an avenue for a malicious actor to stagger game creations over a large number of blocks with decreasing timeouts so that they all expire at the same time.")]),t._v(" "),a("h2",{attrs:{id:"gas-costs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gas-costs"}},[t._v("#")]),t._v(" Gas costs")]),t._v(" "),a("p",[t._v("The keeper also makes it easy for you to charge the gas to the players as you see fit. This gas fee comes on top of the configured standard fee for transactions on your chain. Propose some ratios, which would have to be adjusted so it makes sense compared to the base transaction costs:")]),t._v(" "),a("ul",[a("li",[t._v("Create a game: costs 10. It should include the costs of closing a game. If that was not the case, the losing player would be incentivized to let the game hit its timeout.")]),t._v(" "),a("li",[t._v("Play move: costs one. You could make it cost zero when the player loses the game to incentivize the player to conclude the game instead of letting it hit the timeout.")]),t._v(" "),a("li",[t._v("Reject: costs zero, because you want to incentivize cleaning up the state. This transaction would still cost what your chain is configured to charge for basic transactions.")])]),t._v(" "),a("p",[t._v("So you define the cost:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    CreateGameGas "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    PlayMoveGas   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    RejectGameGas "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Then, you add the line in your "),a("code",[t._v("MsgCreateGame")]),t._v(" handler:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k msgServer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateGame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("goCtx context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MsgCreateGame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MsgCreateGameResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    ctx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GasMeter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ConsumeGas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CreateGameGas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Create game"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])],1)],1)}),[],!1,null,null,null);e.default=n.exports}}]);