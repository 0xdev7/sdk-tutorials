(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{744:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"cosmwasm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cosmwasm"}},[t._v("#")]),t._v(" CosmWasm")]),t._v(" "),s("HighlightBox",{attrs:{type:"synopsis"}},[s("p",[t._v("Discover how multi-chain smart contracts become possible with CosmWasm. The following sections are recommended as a preparation:")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/academy/2-main-concepts/transactions.html"}},[t._v("Transactions")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/academy/2-main-concepts/messages.html"}},[t._v("Messages")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/academy/2-main-concepts/queries.html"}},[t._v("Queries")])],1)])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://cosmwasm.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CosmWasm"),s("OutboundLink")],1),t._v(" offers multi-chain solutions for smart contracts through an actor-model design focused on providing a library.")]),t._v(" "),s("ExpansionPanel",{attrs:{title:"More on the actor model"}},[s("p",[t._v("The actor model is a design pattern for reliable, distributed systems. It is the pattern underlying CosmWasm smart contracts.")]),t._v(" "),s("p",[t._v("Each actor has access to its own internal state and can only message other actors through a so-called dispatcher, which maintains the state and maps addresses to code and storage.")]),t._v(" "),s("p",[t._v("Want to read more on the actor model? Check out "),s("a",{attrs:{href:"https://docs.cosmwasm.com/docs/0.16/architecture/actor",target:"_blank",rel:"noopener noreferrer"}},[t._v("the CosmWasm documentation on the Actor Model for Contract Calls"),s("OutboundLink")],1),t._v(".")])]),t._v(" "),s("p",[t._v("CosmWasm's design makes the code agnostic to the details of underlying chains. It only requires a Cosmos SDK application to embed the "),s("code",[t._v("Wasm")]),t._v(" module.")]),t._v(" "),s("p",[t._v("CosmWasm is adaptable to different development environments by design and makes it possible to connect chains. It is a solid platform to develop on because:")]),t._v(" "),s("ul",[s("li",[t._v("If you want to change chains, you can easily transfer smart contracts and decentralized applications (dApps).")]),t._v(" "),s("li",[t._v("If your application grows, you can launch your chain for the next version of your smart contract. You do not need to compile and deploy the binaries again.")])]),t._v(" "),s("h2",{attrs:{id:"install"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),s("p",[t._v("You need to have installed Go to use the Cosmos SDK. You also need Rust to write smart contracts.")]),t._v(" "),s("p",[t._v("Go to "),s("a",{attrs:{href:"https://rustup.rs",target:"_blank",rel:"noopener noreferrer"}},[t._v("rustup.rs"),s("OutboundLink")],1),t._v(" to install Rust, or update your version with "),s("code",[t._v("rustup update")]),t._v(". Then, have it download and install the "),s("code",[t._v("wasm32")]),t._v(" compilation target:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ rustup target list --installed\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if wasm32 is not listed above, run this")]),t._v("\n$ rustup target "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" wasm32-unknown-unknown\n")])])]),s("HighlightBox",{attrs:{type:"info"}},[s("p",[s("code",[t._v("wasmd")]),t._v(" is the easiest way to get started. It is forked from "),s("a",{attrs:{href:"https://github.com/cosmos/gaia",target:"_blank",rel:"noopener noreferrer"}},[t._v("gaiad (the Gaia Daemon)"),s("OutboundLink")],1),t._v(", which is a binary build with the Cosmos Hub, and includes the "),s("a",{attrs:{href:"https://github.com/CosmWasm/wasmd/tree/master/x/wasm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Wasm"),s("OutboundLink")],1),t._v(" module.")])]),t._v(" "),s("p",[t._v("Create a folder and clone the "),s("a",{attrs:{href:"https://github.com/CosmWasm/wasmd",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("wasmd")]),s("OutboundLink")],1),t._v(" repository into it:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/CosmWasm/wasmd.git\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" wasmd\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout v0.18.0\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),s("p",[t._v("Verify your installation:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ wasmd version\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.18")]),t._v(".0\n")])])]),s("p",[t._v("If you cannot call "),s("code",[t._v("wasmd")]),t._v(", make sure your "),s("code",[t._v("$GOPATH")]),t._v(" and "),s("code",[t._v("$PATH")]),t._v(" are set correctly.")]),t._v(" "),s("h2",{attrs:{id:"connect-to-a-testnet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#connect-to-a-testnet"}},[t._v("#")]),t._v(" Connect to a testnet")]),t._v(" "),s("p",[t._v("First test the "),s("code",[t._v("wasmd")]),t._v(" client with the "),s("a",{attrs:{href:"https://github.com/CosmWasm/testnets/tree/master/pebblenet-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pebblenet"),s("OutboundLink")],1),t._v(" testnet. "),s("code",[t._v("wasmd")]),t._v(" is configured via environment variables. Export the most recent environment from "),s("a",{attrs:{href:"https://github.com/CosmWasm/testnets/blob/master/pebblenet-1/defaults.env",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(":")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://raw.githubusercontent.com/CosmWasm/testnets/master/pebblenet-1/defaults.env -o pebblenet-1-defaults.env\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" pebblenet-1-defaults.env\n")])])]),s("p",[t._v("Confirm you got it right:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CHAIN_ID")]),t._v("\npebblenet-1\n")])])]),s("p",[t._v("And if you happen to open another terminal window, don't forget to repeat this "),s("code",[t._v("source")]),t._v(" command as this is local to the session.")]),t._v(" "),s("h2",{attrs:{id:"your-accounts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#your-accounts"}},[t._v("#")]),t._v(" Your accounts")]),t._v(" "),s("p",[t._v("Now add some keys:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ wasmd keys "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" wallet\n$ wasmd keys "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" wallet2\n")])])]),s("p",[t._v("Let's see what was created:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ wasmd keys show wallet --address\nwasm1jj7gzazxvgy56rj8kersuc44ehvep0uey85jdn\n")])])]),s("p",[t._v("That's your address, query your token balance:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("wasmd query bank balances "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("wasmd keys show wallet --address"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" --node "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RPC")]),t._v("\npagination: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("None. Time to ask the "),s("a",{attrs:{href:"https://faucet.pebblenet.cosmwasm.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("faucet"),s("OutboundLink")],1),t._v(" to remedy that sorry state. To facilitate command-line actions, install "),s("a",{attrs:{href:"https://stedolan.github.io/jq/",target:"_blank",rel:"noopener noreferrer"}},[t._v("jq"),s("OutboundLink")],1),t._v(", which is a lightweight and flexible command-line JSON processor. Then prepare the request for your "),s("code",[t._v("wallet")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("jq --null-input --arg addr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$(")]),t._v("wasmd keys show wallet --address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"denom":"upebble","address":$addr}\'')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$JSON")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"denom"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"upebble"')]),t._v(",\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"address"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wasm1jj7gzazxvgy56rj8kersuc44ehvep0uey85jdn"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("upebble")]),t._v(" is the denomination of the test net token. With the content of the request ready, you can call the faucet:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X POST --header "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type: application/json"')]),t._v(" --data "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$JSON")]),t._v('"')]),t._v(" https://faucet.pebblenet.cosmwasm.com/credit\nok\n")])])]),s("p",[t._v("Query your balance again:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ wasmd query bank balances "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("wasmd keys show wallet --address"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" --node "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RPC")]),t._v("\nbalances:\n- amount: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100000"')]),t._v("\n  denom: upebble\npagination: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Repeat the same for "),s("code",[t._v("wallet2")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"compile-a-smart-contract"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compile-a-smart-contract"}},[t._v("#")]),t._v(" Compile a smart contract")]),t._v(" "),s("p",[t._v("Now that you have enough tokens to deploy a smart contract on Pebblenet, clone the contract samples away from your "),s("code",[t._v("wasmd")]),t._v(" folder:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/InterWasm/cw-contracts\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" cw-contracts/contracts/nameservice\n$ cargo wasm\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nCompiling cw-nameservice v0.11.0 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("/Users/me/cw-contracts/contracts/nameservice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n Finished release "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("optimized"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 1m 20s\n")])])]),s("p",[t._v("In this last command, "),s("code",[t._v("wasm")]),t._v(" is "),s("a",{attrs:{href:"https://github.com/InterWasm/cw-contracts/blob/ac4c2b9/contracts/nameservice/.cargo/config#L2",target:"_blank",rel:"noopener noreferrer"}},[t._v("an alias"),s("OutboundLink")],1),t._v(" for "),s("code",[t._v("wasm build --release --target wasm32-unknown-unknown")]),t._v(".")]),t._v(" "),s("p",[t._v("You now have a compiled smart contract on file. You want to maintain your smart contract binary as small as possible and Rust compiled with default settings. Check the size of your build with:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -lh target/wasm32-unknown-unknown/release/cw_nameservice.wasm\n-rwxr-xr-x "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" me staff "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".7M target/wasm32-unknown-unknown/release/cw_nameservice.wasm\n")])])]),s("p",[t._v("You can optimize the code with a "),s("a",{attrs:{href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker"),s("OutboundLink")],1),t._v(" container based on an "),s("a",{attrs:{href:"https://hub.docker.com/r/cosmwasm/rust-optimizer/tags",target:"_blank",rel:"noopener noreferrer"}},[t._v("image provided by CosmWasm"),s("OutboundLink")],1),t._v(" for production purposes:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ docker run --rm -v "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v(":/code "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --mount "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("volume,source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(basename "'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v('_cache",target'),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/code/target "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --mount "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("volume,source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("registry_cache,target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/cargo/registry "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  cosmwasm/rust-optimizer:0.12.3\n")])])]),s("p",[t._v("Compare the result:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -alh artifacts/cw_nameservice.wasm\n-rw-r--r--  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" me staff 139K artifacts/cw_nameservice.wasm\n")])])]),s("h2",{attrs:{id:"upload-a-smart-contract-binary"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upload-a-smart-contract-binary"}},[t._v("#")]),t._v(" Upload a smart contract binary")]),t._v(" "),s("p",[t._v("Time to store the smart contract binaries on the blockchain:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RES")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("wasmd tx wasm store artifacts/cw_nameservice.wasm --from wallet --node $RPC --chain-id pebblenet-1 --gas-prices "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".001upebble --gas auto --gas-adjustment "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CODE_ID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" $RES "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq -r "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.logs[0].events[-1].attributes[0].value'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n")])])]),t._v(" "),s("p",[t._v("The response returns a "),s("code",[t._v("code_id")]),t._v(" value, which uniquely identifies your newly uploaded binary in the blockchain. Keep it at hand in order to instantiate a name service with this binary in the next steps.")]),t._v(" "),s("h2",{attrs:{id:"instantiate-your-smart-contract"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#instantiate-your-smart-contract"}},[t._v("#")]),t._v(" Instantiate your smart contract")]),t._v(" "),s("p",[t._v("You only uploaded some code but do not yet have any smart contract instance. You can now instantiate a new smart contract that uses this code. Look at the aptly-named "),s("code",[t._v("instantiate")]),t._v(" function in the name server contract:")]),t._v(" "),s("div",{staticClass:"language-rust [https://github.com/InterWasm/cw-contracts/blob/2f545b7b8b8511bc0f92f2f3f838c236ba0d850c/contracts/nameservice/src/contract.rs#L14-L28] extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[cfg_attr(not(feature = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"library"')]),t._v("), entry_point)]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("instantiate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    deps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DepsMut")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    _env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    _info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InstantiateMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Response")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StdError")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" config_state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Config")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        purchase_price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("purchase_price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        transfer_price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transfer_price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("config_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Ok")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Response")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Among the parameters the function expects are "),s("a",{attrs:{href:"https://github.com/InterWasm/cw-contracts/blob/2f545b7/contracts/nameservice/src/msg.rs#L6-L9",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("msg.purchase_price")]),t._v(" and "),s("code",[t._v("msg.transfer_price")]),s("OutboundLink")],1),t._v(". Both have the type "),s("a",{attrs:{href:"https://docs.rs/cosmwasm-std/0.9.2/cosmwasm_std/struct.Coin.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("cosmwasm_std::Coin"),s("OutboundLink")],1),t._v(", which, you will note, looks very similar to Cosmos SDK's "),s("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/c41ac20c6cd6cc2b65afa6af587bf39048b2f251/types/coin.pb.go#L31-L34",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Coin")]),s("OutboundLink")],1),t._v(". Of course this is no coincidence. With this knowledge, instantiate a new name service with a "),s("code",[t._v("purchase_price")]),t._v(" and "),s("code",[t._v("transfer_price")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ wasmd tx wasm instantiate "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CODE_ID")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"purchase_price":{"amount":"100","denom":"upebble"},"transfer_price":{"amount":"999","denom":"upebble"}}\'')]),t._v(" --from wallet --node "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RPC")]),t._v(" --chain-id pebblenet-1 --gas-prices "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".001upebble --gas auto --gas-adjustment "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3")]),t._v("  --label "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CosmWasm tutorial name service"')]),t._v("\n")])])]),s("p",[t._v("You see again the "),s("code",[t._v("CODE_ID")]),t._v(" that refers to which binary to use for the instantiation. Check that the name service instance was successfully created with:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ wasmd query wasm list-contract-by-code "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CODE_ID")]),t._v(" --node "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RPC")]),t._v(" --output json\n")])])]),s("p",[t._v("You can find the contract address in the response. Make it a variable too:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ CONTRACT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" the_address_in_the_response\n")])])]),s("p",[t._v("Use it to fetch more information with the following command:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ wasmd query wasm contract "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CONTRACT")]),t._v(" --node "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RPC")]),t._v("\n")])])]),s("h2",{attrs:{id:"call-your-smart-contract"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#call-your-smart-contract"}},[t._v("#")]),t._v(" Call your smart contract")]),t._v(" "),s("p",[t._v("With your instance now running, you can call other functions on it.")]),t._v(" "),s("h3",{attrs:{id:"register-a-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#register-a-name"}},[t._v("#")]),t._v(" Register a name")]),t._v(" "),s("p",[t._v("Looking back into the contract code, you can find the "),s("code",[t._v("execute")]),t._v(" function:")]),t._v(" "),s("div",{staticClass:"language-rust [https://github.com/InterWasm/cw-contracts/blob/2f545b7b8b8511bc0f92f2f3f838c236ba0d850c/contracts/nameservice/src/contract.rs#L30-L41] extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[cfg_attr(not(feature = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"library"')]),t._v("), entry_point)]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    deps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DepsMut")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Response")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ContractError")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" msg "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Register")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute_register")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Transfer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute_transfer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("There are two "),s("em",[t._v("execute")]),t._v(" message types. It is used to register or transfer a name within the name service. Start by "),s("a",{attrs:{href:"https://github.com/InterWasm/cw-contracts/blob/2f545b7b8b8511bc0f92f2f3f838c236ba0d850c/contracts/nameservice/src/msg.rs#L11-L16",target:"_blank",rel:"noopener noreferrer"}},[t._v("registering"),s("OutboundLink")],1),t._v(" a new name with your instance:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ wasmd tx wasm execute "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CONTRACT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"register":{"name":"fred"}}\'')]),t._v(" --amount 100upebble --from wallet --node "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RPC")]),t._v(" --chain-id pebblenet-1 --gas-prices "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".001upebble --gas auto --gas-adjustment "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3")]),t._v("\n")])])]),s("h3",{attrs:{id:"verify-the-name-registration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#verify-the-name-registration"}},[t._v("#")]),t._v(" Verify the name registration")]),t._v(" "),s("p",[t._v("With the transaction posted, it is time to verify that the name was registered. In the contract you can find the "),s("code",[t._v("query")]),t._v(" function:")]),t._v(" "),s("div",{staticClass:"language-rust [https://github.com/InterWasm/cw-contracts/blob/2f545b7b8b8511bc0f92f2f3f838c236ba0d850c/contracts/nameservice/src/contract.rs#L95-L101] extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[cfg_attr(not(feature = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"library"')]),t._v("), entry_point)]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("query")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Deps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QueryMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StdResult")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Binary")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" msg "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QueryMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResolveRecord")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("query_resolver")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QueryMsg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Config")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_binary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("config_read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("There are two "),s("em",[t._v("query")]),t._v(" message types. Note that you now have "),s("code",[t._v("deps: Deps")]),t._v(" instead of "),s("code",[t._v("deps: DepsMut")]),t._v(". This indicates that the execution of the function does not mutate the state. This is indeed what you want to use with your functions that implement a "),s("em",[t._v("query")]),t._v(" type of service.")]),t._v(" "),s("p",[t._v("Verify the registration with "),s("a",{attrs:{href:"https://github.com/InterWasm/cw-contracts/blob/2f545b7b8b8511bc0f92f2f3f838c236ba0d850c/contracts/nameservice/src/msg.rs#L18-L24",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("ResolveRecord")]),s("OutboundLink")],1),t._v(":")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ wasmd query wasm contract-state smart "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CONTRACT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"resolve_record": {"name": "fred"}}\'')]),t._v(" --node "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RPC")]),t._v(" --output json\n")])])]),s("p",[t._v("The response gives you the wallet address owning the registered name, which should be "),s("code",[t._v("wallet")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"transfer-a-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transfer-a-name"}},[t._v("#")]),t._v(" Transfer a name")]),t._v(" "),s("p",[t._v("Now create another transaction to transfer the name to the second wallet "),s("code",[t._v("wallet2")]),t._v(". First prepare the query with the address of your other wallet:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("jq --null-input --arg addr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$(")]),t._v("wasmd keys show wallet2 --address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"transfer":{"name":"fred","to":$addr}}\'')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n")])])]),s("p",[t._v("Then send the transaction:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ wasmd tx wasm execute "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CONTRACT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$JSON")]),t._v('"')]),t._v(" --amount 999upebble --from wallet --node "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RPC")]),t._v(" --chain-id pebblenet-1 --gas-prices "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".001upebble --gas auto --gas-adjustment "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3")]),t._v("\n")])])]),s("p",[t._v("Under the hood, the execution used "),s("code",[t._v("transfer_price")]),t._v(", which you set at the instantiation.")]),t._v(" "),s("p",[t._v("Check again with a "),s("code",[t._v("resolve_record")]),t._v(" query to confirm that the transfer was successful. Experiment with another transfer from "),s("code",[t._v("wallet2")]),t._v(" to "),s("code",[t._v("wallet")]),t._v(", and pay attention at which wallet can perform which transaction.")]),t._v(" "),s("HighlightBox",{attrs:{type:"tip"}},[s("p",[t._v("CosmWasm offers good "),s("a",{attrs:{href:"https://docs.cosmwasm.com/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("documentation"),s("OutboundLink")],1),t._v(". This section is a summary of the "),s("a",{attrs:{href:"https://docs.cosmwasm.com/docs/getting-started/intro/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Getting Started section"),s("OutboundLink")],1),t._v(". Store the "),s("code",[t._v("env")]),t._v(" script from [here]https://docs.cosmwasm.com/docs/1.0/getting-started/setting-env#setup-go-cli) in case you wish to test on your local node. Also have a look at the "),s("a",{attrs:{href:"https://docs.cosmwasm.com/docs/SEMANTICS/",target:"_blank",rel:"noopener noreferrer"}},[t._v("contract semantics"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("You can find more information in the "),s("a",{attrs:{href:"https://docs.cosmwasm.com/dev-academy/intro",target:"_blank",rel:"noopener noreferrer"}},[t._v("CosmWasm Developer Academy"),s("OutboundLink")],1),t._v(" and modular tutorials in the "),s("a",{attrs:{href:"https://docs.cosmwasm.com/tutorials/hijack-escrow/intro",target:"_blank",rel:"noopener noreferrer"}},[t._v("Wasm tutorials"),s("OutboundLink")],1),t._v(". You can also find various hands-on videos on the "),s("a",{attrs:{href:"https://docs.cosmwasm.com/tutorials/videos-workshops",target:"_blank",rel:"noopener noreferrer"}},[t._v("workshops"),s("OutboundLink")],1),t._v(" page.")])]),t._v(" "),s("h2",{attrs:{id:"next-up"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#next-up"}},[t._v("#")]),t._v(" Next up")]),t._v(" "),s("p",[t._v("At this point, you have:")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/academy/1-what-is-cosmos/blockchain-and-cosmos.html"}},[t._v("Understood how Cosmos and the Cosmos SDK fit in the overall development of blockchain technology.")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/academy/1-what-is-cosmos/cosmos-ecosystem.html"}},[t._v("A better sense of what comprises the Cosmos ecosystem.")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/academy/1-what-is-cosmos/atom-staking.html"}},[t._v("Set up a wallet, got some ATOM tokens, and staked them.")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/academy/2-main-concepts/architecture.html"}},[t._v("Learned more about the elements of application architecture.")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/academy/2-main-concepts/"}},[t._v("Understood and applied main concepts of the Cosmos SDK.")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/academy/3-running-a-chain/node-api-and-cli.html"}},[t._v("Ran a node, API, and CLI for a Cosmos chain.")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/academy/4-my-own-chain/starport.html"}},[t._v("Used Starport to develop your chain.")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/academy/4-my-own-chain/cosmjs.html"}},[t._v("Explored CosmJS and the code generated by Starport.")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/academy/4-my-own-chain/cosmwasm.html"}},[t._v("Discovered how CosmWasm assists with developing multi-chain smart contracts in Rust.")])],1)]),t._v(" "),s("p",[t._v("You might wonder: what's next? There are vast opportunities to continue your journey with Cosmos to:")]),t._v(" "),s("ul",[s("li",[t._v("Reach out to the community.")]),t._v(" "),s("li",[t._v("Contribute to the Cosmos SDK, IBC, and Tendermint BFT consensus development.")]),t._v(" "),s("li",[t._v("Get support for enterprise solutions, which you are developing.")])]),t._v(" "),s("p",[t._v("Head to the "),s("RouterLink",{attrs:{to:"/academy/5-whats-next/"}},[t._v("What's Next section")]),t._v(" to find useful information to launch your journey into the Cosmos universe.")],1)],1)}),[],!1,null,null,null);a.default=n.exports}}]);