(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{601:function(a,t,e){a.exports=e.p+"assets/img/do-ubuntu-image.59b08bdf.png"},602:function(a,t,e){a.exports=e.p+"assets/img/do-droplet-size.eb59960c.png"},733:function(a,t,e){"use strict";e.r(t);var s=e(1),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"publish-your-starport-blockchain-app-on-digitalocean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#publish-your-starport-blockchain-app-on-digitalocean"}},[a._v("#")]),a._v(" Publish Your Starport Blockchain App on DigitalOcean")]),a._v(" "),s("p",[a._v("In this tutorial, you will publish your blockchain application an Ubuntu 20.04 droplet on DigitalOcean.")]),a._v(" "),s("h2",{attrs:{id:"goals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#goals"}},[a._v("#")]),a._v(" Goals")]),a._v(" "),s("p",[a._v("You will follow step-by-step instructions to build and run your blockchain app with these high-level steps:")]),a._v(" "),s("ul",[s("li",[a._v("Create a Cosmos SDK blockchain app with Starport")]),a._v(" "),s("li",[a._v("Create a Droplet on DigitalOcean")]),a._v(" "),s("li",[a._v("Upload your app to the Droplet")]),a._v(" "),s("li",[a._v("Run the app on the Droplet")])]),a._v(" "),s("h3",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[a._v("#")]),a._v(" Introduction")]),a._v(" "),s("p",[a._v("This article is written for DigitalOcean. While this information can be helpful with other cloud services, the details apply only to DigitalOcean Droplets. Because DigitalOcean Droplets are Linux-based virtual machines (VMs), the operating system steps in this tutorial apply to MacOS and Linux operating systems.")]),a._v(" "),s("p",[a._v("Steps might be significantly different for Windows operating systems.")]),a._v(" "),s("p",[a._v("For the best experience using this tutorial, we recommend using DigitalOcean.")]),a._v(" "),s("p",[s("strong",[a._v("Important")]),a._v(" Placeholder values are used in the code examples throughout this tutorial:")]),a._v(" "),s("ul",[s("li",[a._v("When you see username be sure to substitute it with your username.")]),a._v(" "),s("li",[a._v("Although you can use digitalocean as your directory and app name, you can replace it with your own app name.")])]),a._v(" "),s("h2",{attrs:{id:"requirements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[a._v("#")]),a._v(" Requirements")]),a._v(" "),s("p",[a._v("To complete this guide, you will need:")]),a._v(" "),s("ul",[s("li",[a._v("A "),s("a",{attrs:{href:"https://cloud.digitalocean.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("DigitalOcean"),s("OutboundLink")],1),a._v(" account. If you do not have an account, DigitalOcean may offer a free trial to let you build Basic Droplets.")]),a._v(" "),s("li",[a._v("A supported version of "),s("a",{attrs:{href:"https://docs.starport.network/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Starport"),s("OutboundLink")],1),a._v(". To install Starport, see "),s("RouterLink",{attrs:{to:"/starport/install.html"}},[a._v("Install Starport")]),a._v(".")],1),a._v(" "),s("li",[a._v("Go (version 1.16 or higher). See "),s("a",{attrs:{href:"https://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"}},[a._v("Download and install Go"),s("OutboundLink")],1),a._v(" documentation. Using brew to install Go is not recommended.")])]),a._v(" "),s("h2",{attrs:{id:"step-1-create-your-starport-app"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-1-create-your-starport-app"}},[a._v("#")]),a._v(" Step 1 — Create Your Starport App")]),a._v(" "),s("p",[a._v("In this step, you create your Starport application on your local computer. Later, you will upload the app to your DigitalOcean Droplet.")]),a._v(" "),s("p",[a._v("Create a directory and run Starport to create a Cosmos SDK blockchain app.")]),a._v(" "),s("p",[a._v("On your local computer, run these commands in a terminal window:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" blockchain\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" blockchain\nstarport app github.com/"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("username"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/digitalocean\n")])])]),s("p",[a._v("A blockchain app with backend and frontend is created. The default scaffold is a working blockchain app with the functionality that is similar to the Cosmos Hub ($ATOM). Learn about the "),s("a",{attrs:{href:"https://hub.cosmos.network/main/hub-overview/overview.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Cosmos Hub"),s("OutboundLink")],1),a._v(" and "),s("a",{attrs:{href:"https://cosmos.network/features",target:"_blank",rel:"noopener noreferrer"}},[a._v("ATOM"),s("OutboundLink")],1),a._v(".")]),a._v(" "),s("p",[a._v("To change any parameters of the blockchain, "),s("a",{attrs:{href:"https://docs.starport.network/configure/",target:"_blank",rel:"noopener noreferrer"}},[a._v("learn how to configure"),s("OutboundLink")],1),a._v(" your blockchain app with Starport.")]),a._v(" "),s("h2",{attrs:{id:"step-2-host-your-app-on-digitalocean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-2-host-your-app-on-digitalocean"}},[a._v("#")]),a._v(" Step 2 — Host Your App on DigitalOcean")]),a._v(" "),s("p",[a._v("DigitalOcean provides developers cloud services that help to deploy and scale applications that run simultaneously on multiple computers.")]),a._v(" "),s("p",[a._v("Use the DigitalOcean infrastructure to publish a Cosmos SDK blockchain application to ensure the app is accessible on the web. Your app must be accessible on the web to allow other apps and new nodes to connect to your blockchain network.")]),a._v(" "),s("h3",{attrs:{id:"create-a-droplet-on-digitalocean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-a-droplet-on-digitalocean"}},[a._v("#")]),a._v(" Create a Droplet on DigitalOcean")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("Log into your DigitalOcean account and access the "),s("a",{attrs:{href:"https://cloud.digitalocean.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("control panel"),s("OutboundLink")],1),a._v(".")])]),a._v(" "),s("li",[s("p",[a._v("From the "),s("strong",[a._v("Create")]),a._v(" menu in the top right of the control panel, click "),s("strong",[a._v("Droplets")]),a._v(".")])]),a._v(" "),s("li",[s("p",[a._v("Choose the Ubuntu 20.04 (LTS) x64 image and a Shared CPU Basic plan:")]),a._v(" "),s("p",[s("img",{attrs:{src:e(601),alt:"Ubuntu 20.04 Image",title:"Choose Ubuntu 20.04"}})])]),a._v(" "),s("li",[s("p",[a._v("Choose your memory and compute resources. Virtual machines offer a mix of memory and compute resources. For a typical blockchain app that is not computing intense, 2 GB Ram/1 CPU are sufficient for your development and test environment.")]),a._v(" "),s("p",[s("img",{attrs:{src:e(602),alt:"DigitalOcean Droplet Size",title:"DigitalOcean Droplet Size"}})])]),a._v(" "),s("li",[s("p",[a._v("Accept the default datacenter region and VPC network selections.")])]),a._v(" "),s("li",[s("p",[a._v("We recommend SSH keys for your "),s("strong",[a._v("Authentication")]),a._v(" method to access your Droplet. "),s("a",{attrs:{href:"https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-2",target:"_blank",rel:"noopener noreferrer"}},[a._v("Learn how to setup your SSH key"),s("OutboundLink")],1),a._v(".")])]),a._v(" "),s("li",[s("p",[a._v("For "),s("strong",[a._v("How many Droplets?")]),a._v(" accept the default 1 Droplet selection.")])]),a._v(" "),s("li",[s("p",[a._v("For "),s("strong",[a._v("Choose a hostname")]),a._v(" you can optionally add an identifying name.")])]),a._v(" "),s("li",[s("p",[a._v("For "),s("strong",[a._v("Tags")]),a._v(" you can optionally add one or more tags.")])]),a._v(" "),s("li",[s("p",[a._v("For "),s("strong",[a._v("Select Project")]),a._v(" you can accept the default project.")])]),a._v(" "),s("li",[s("p",[a._v("Do not select "),s("strong",[a._v("Add backups")]),a._v(".")])]),a._v(" "),s("li",[s("p",[a._v("Select "),s("strong",[a._v("Create Droplet")]),a._v(".")])])]),a._v(" "),s("p",[a._v("You new Droplet is shown in the list of your Droplets.")]),a._v(" "),s("h3",{attrs:{id:"access-your-new-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-your-new-node"}},[a._v("#")]),a._v(" Access Your New Node")]),a._v(" "),s("p",[a._v("Congratulations, you are now ready to connect to your new node.")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("In the list of Droplets in the DigitalOcean Control Panel, you can mouse over the IP address to copy it into your clipboard.")])]),a._v(" "),s("li",[s("p",[a._v("Open a terminal window and type "),s("code",[a._v("ssh root@<IP address>")]),a._v(" to connect to your new node. See "),s("a",{attrs:{href:"https://docs.digitalocean.com/products/droplets/how-to/connect-with-ssh/openssh/",target:"_blank",rel:"noopener noreferrer"}},[a._v("How to Connect to your Droplet with OpenSSH"),s("OutboundLink")],1),a._v(".")])])]),a._v(" "),s("h3",{attrs:{id:"create-a-user-to-run-the-blockchain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-a-user-to-run-the-blockchain"}},[a._v("#")]),a._v(" Create a User to Run the Blockchain")]),a._v(" "),s("p",[a._v("First, create a user that to run the blockchain. For this example, you can use "),s("code",[a._v("appuser")]),a._v(" as the username. Use the "),s("code",[a._v("adduser")]),a._v(" command:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("adduser appuser\n")])])]),s("p",[a._v("When prompted, enter and confirm a password for "),s("code",[a._v("appuser")]),a._v(".")]),a._v(" "),s("p",[a._v("After the password is successfully updated, you are prompted to change the user information for appuser. Press ENTER to use the default values. Type "),s("code",[a._v("Y")]),a._v(" to confirm the information is correct.")]),a._v(" "),s("p",[a._v("To give appropriate permissions, add "),s("code",[a._v("appuser")]),a._v(" to the "),s("code",[a._v("sudo")]),a._v(" group:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("usermod")]),a._v(" -aG "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" appuser\n")])])]),s("p",[a._v("See "),s("a",{attrs:{href:"https://www.digitalocean.com/community/tutorials/how-to-create-a-new-sudo-enabled-user-on-ubuntu-18-04-quickstart",target:"_blank",rel:"noopener noreferrer"}},[a._v("How To Create a New Sudo-enabled User on Ubuntu 18.04"),s("OutboundLink")],1),a._v(".")]),a._v(" "),s("p",[a._v("To be able to login as "),s("code",[a._v("appuser")]),a._v(", copy your ssh public key to the new home directory for "),s("code",[a._v("appuser")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rsync")]),a._v(" --archive --chown"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("appuser:appuser ~/.ssh /home/appuser\n")])])]),s("p",[a._v("Now, switch to your new user account:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("su")]),a._v(" - appuser\n")])])]),s("h3",{attrs:{id:"set-up-your-droplet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-up-your-droplet"}},[a._v("#")]),a._v(" Set Up Your Droplet")]),a._v(" "),s("p",[a._v("To set up your Droplet, you need to install a few tools to help us to publish your blockchain app.")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("Install "),s("a",{attrs:{href:"https://golang.org/dl/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Go"),s("OutboundLink")],1),a._v(".")]),a._v(" "),s("p",[a._v("At the time of writing the tutorial, the latest version of Go is 1.16.5.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ~\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://golang.org/dl/go1.16.5.linux-amd64.tar.gz\nsha256sum go1.16.5.linux-amd64.tar.gz\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# b12c23023b68de22f74c0524f10b753e7b08b1504cb7e417eccebdd3fae49061  go1.16.5.linux-amd64.tar.gz")]),a._v("\n")])])])]),a._v(" "),s("li",[s("p",[a._v("Extract the archive and keep it in "),s("code",[a._v("/usr/local")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -xvf go1.16.5.linux-amd64.tar.gz -C /usr/local\n")])])]),s("p",[a._v("A directory named "),s("code",[a._v("go")]),a._v(" is now in the "),s("code",[a._v("/usr/local")]),a._v(" directory.")])]),a._v(" "),s("li",[s("p",[a._v("Next, recursively change this directory’s owner and group to "),s("code",[a._v("appuser")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chown")]),a._v(" -R appuser:appuser /usr/local/go\n")])])])]),a._v(" "),s("li",[s("p",[a._v("Add the go paths to your profile:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" ~/.profile\n")])])]),s("p",[a._v("At the end of the file, add the following two lines:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOPATH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/go\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GOPATH")]),a._v("/bin:/usr/local/go/bin\n")])])])]),a._v(" "),s("li",[s("p",[a._v("Update your profile:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" ~/.profile\n")])])])]),a._v(" "),s("li",[s("p",[a._v("Verify your go installation:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("go version\n")])])]),s("p",[a._v("The results:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("go version go1.16.5 linux/amd64\n")])])])]),a._v(" "),s("li",[s("p",[a._v("To use Starport, install the Starport CLI:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" https://get.starport.network/starport"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])])]),s("p",[a._v("The latest stable version of Starport is installed.")])])]),a._v(" "),s("h2",{attrs:{id:"upload-your-app-to-the-droplet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upload-your-app-to-the-droplet"}},[a._v("#")]),a._v(" Upload Your App to the Droplet")]),a._v(" "),s("p",[a._v("Several methods are available to upload your app to the Droplet.")]),a._v(" "),s("p",[a._v("One convenient method is to upload the app to GitHub and then download it on your Droplet. Starport creates a GitHub repository that makes it convenient to add your app to your repositories.")]),a._v(" "),s("p",[a._v("To upload the files, you can use "),s("code",[a._v("scp")]),a._v(" to avoid a few extra steps.")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("In a terminal window on your local machine, make sure you are in the parent directory of the Starport repo that you created earlier. For example, "),s("code",[a._v("/Users/username/blockchain")]),a._v(" is the parent directory of your "),s("code",[a._v("digitalocean")]),a._v(" app directory. From the "),s("code",[a._v("/Users/username/blockchain")]),a._v(" directory, use the following command to upload the local app directory to your DigitalOcean server:")]),a._v(" "),s("p",[s("code",[a._v("scp -r digitalocean appuser@<IP address>:/home/appuser/")])]),a._v(" "),s("p",[a._v("This command uploads your local "),s("code",[a._v("digitalocean")]),a._v(" app to your home directory on your DigitalOcean Droplet, "),s("code",[a._v("/home/appuser")]),a._v(".")])])]),a._v(" "),s("h2",{attrs:{id:"install-your-app"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-your-app"}},[a._v("#")]),a._v(" Install your app")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("In a terminal window on the Droplet, you can change to the "),s("code",[a._v("/home/appuser/digitalocean")]),a._v(" directory after the upload is completed:")]),a._v(" "),s("p",[s("code",[a._v("cd digitalocean")])])]),a._v(" "),s("li",[s("p",[a._v("To install your app and configuration on the Droplet, use the Starport CLI:")])])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("starport serve\n")])])]),s("p",[a._v("The "),s("code",[a._v("starport serve")]),a._v(" command builds your Starport app, creates a genesis file, and creates your configuration.")]),a._v(" "),s("p",[a._v("You see an output similar to:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("Cosmos SDK's version is: Stargate v0.40.0 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("or later"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n🛠️  Building proto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n📦 Installing dependencies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n🛠️  Building the blockchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n💿 Initializing the app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n🙂 Created account "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"alice"')]),a._v(" with address "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cosmos1sucepwrvgkud7fc6ftne8s2glzjpqx4zsl6zxa"')]),a._v(" with mnemonic: "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"expect goddess business detail loud know broom trial deliver board victory despair tackle ripple body weapon runway lawn roast cactus attitude midnight town fox"')]),a._v("\n🙂 Created account "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bob"')]),a._v(" with address "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cosmos15jayucugyfnlj4tu7xhutnufxr4qd8j6qjmekk"')]),a._v(" with mnemonic: "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mouse lamp excuse young top century empower afford oven grass pass heavy evil sample lake trick leisure aisle bird dumb radio learn ecology stamp"')]),a._v("\nGenesis transaction written to "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/home/appuser/.digitalocean/config/gentx/gentx-85ef06cb86aa501cceb9ed0a497a02503f5aa57f.json"')]),a._v("\n🌍 Tendermint node: http://0.0.0.0:26657\n🌍 Blockchain API: http://0.0.0.0:1317\n🌍 Token faucet: http://0.0.0.0:4500\n")])])]),s("p",[a._v("Press Ctrl+C to stop the chain that you started with the "),s("code",[a._v("starport serve")]),a._v(" command.")]),a._v(" "),s("p",[a._v("To confirm the installation (and celebrate your success), start the app:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("digitaloceand\n")])])]),s("p",[a._v("When all of these steps were successful, the output prints:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("Stargate CosmosHub App\n\nUsage:\n  digitaloceand "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\nAvailable Commands:\n\n\n  add-genesis-account Add a genesis account to genesis.json\n  collect-gentxs      Collect genesis txs and output a genesis.json "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v("\n  debug               Tool "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" helping with debugging your application\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v("              Export state to JSON\n  gentx               Generate a genesis tx carrying a self delegation\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v("                Help about any "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v("\n  init                Initialize private validator, p2p, genesis, and application configuration files\n  keys                Manage your application's keys\n  migrate             Migrate genesis to a specified target version\n  query               Querying subcommands\n  start               Run the full node\n  status              Query remote node "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" status\n  tendermint          Tendermint subcommands\n  tx                  Transactions subcommands\n  unsafe-reset-all    Resets the blockchain database, removes address book files, and resets data/priv_validator_state.json to the genesis state\n  validate-genesis    validates the genesis "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" at the default location or at the location passed as an arg\n  version             Print the application binary version information\n\nFlags:\n  -h, --help                "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" digitaloceand\n      --home string         directory "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" config and data "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/home/appuser/.digitalocean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      --log_format string   The logging "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("format")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("json"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("plain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"plain"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      --log_level string    The logging level "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("trace"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("debug"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("info"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("warn"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("error"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("fatal"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("panic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("default "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"info"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      --trace               print out full stack trace on errors\n\nUse "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"digitaloceand [command] --help"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("more")]),a._v(" information about a command.\n")])])]),s("h2",{attrs:{id:"create-a-systemd-process"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-a-systemd-process"}},[a._v("#")]),a._v(" Create a Systemd process")]),a._v(" "),s("p",[a._v("The "),s("code",[a._v("starport serve")]),a._v(" command helps installing, building, and configuring your app for a new blockchain. You received tokens on newly created accounts.")]),a._v(" "),s("p",[a._v("This new app is useful only for development purposes and is not intended to be run for an extended time or in production.")]),a._v(" "),s("p",[a._v("For the app to run for a longer time, you need a "),s("code",[a._v("systemd")]),a._v(" process on your Droplet.")]),a._v(" "),s("p",[a._v("Create the log files and a "),s("code",[a._v("systemd")]),a._v(" file to manage your process so that you can log off from the terminal and be confident the app keeps running even when the server restarts.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p /var/log/digitaloceand\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" /var/log/digitaloceand/digitaloceand.log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" /var/log/digitaloceand/digitaloceand_error.log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" /etc/systemd/system/digitaloceand.service\n")])])]),s("p",[a._v("Use nano to edit the systemd service file:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" /etc/systemd/system/digitaloceand.service\n")])])]),s("p",[a._v("Add your application details to the file:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Unit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("Description")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("digitalocean daemon\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("After")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("network-online.target\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("User")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("appuser\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ExecStart")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/home/appuser/go/bin/digitaloceand start --home"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/home/appuser/.digitalocean\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("WorkingDirectory")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/home/appuser/go/bin\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("StandardOutput")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("file:/var/log/digitaloceand/digitaloceand.log\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("StandardError")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("file:/var/log/digitaloceand/digitaloceand_error.log\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("Restart")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("RestartSec")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LimitNOFILE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4096")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Install"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("WantedBy")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("multi-user.target\n")])])]),s("p",[a._v("To close and save the file, press Ctrl+x. Then type "),s("code",[a._v("Y")]),a._v(" and press Enter.")]),a._v(" "),s("p",[a._v("The next step is to enable the file so the app is available even after a system start:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" digitaloceand.service\n")])])]),s("p",[a._v("Now start the systemd process:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl start digitaloceand.service\n")])])]),s("p",[a._v("Check the logs with:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" journalctl -u digitaloceand -f\n")])])]),s("p",[a._v("Your app is now running on DigitalOcean.")]),a._v(" "),s("h2",{attrs:{id:"connect-your-local-running-chain-to-the-published-chain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#connect-your-local-running-chain-to-the-published-chain"}},[a._v("#")]),a._v(" Connect your local running chain to the published chain")]),a._v(" "),s("p",[a._v("To connect your local running chain with the published app, you need to:")]),a._v(" "),s("ul",[s("li",[a._v("Find the node you just created with the IP address")]),a._v(" "),s("li",[a._v("Download the genesis file")]),a._v(" "),s("li",[a._v("Configure your app to connect to the published node")])]),a._v(" "),s("p",[a._v("On your DigitalOcean droplet, find the hash of the node by typing:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("digitaloceand tendermint show-node-id\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# For example, 85ef06cb86aa501cceb9ed0a497a02503f5aa57f")]),a._v("\n")])])]),s("p",[a._v("Each node has a different node id.")]),a._v(" "),s("p",[a._v("At a terminal window back on your local machine, initialize your blockchain with:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("digitaloceand init localnode\n")])])]),s("p",[a._v("Next, download the "),s("code",[a._v("genesis.json")]),a._v(" file from your node:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("scp")]),a._v(" appuser@"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("IP address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(":/home/appuser/.digitalocean/config/genesis.json ~/.digitalocean/config/\n")])])]),s("p",[a._v("Then add the published node ID and IP into the configuration file on your local machine:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nano")]),a._v(" ~/.digitalocean/config/config.toml\n")])])]),s("p",[a._v("Add a persistent connection. Use the node-id from the Droplet together with the IP address and default port:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Comma separated list of nodes to keep persistent connections to")]),a._v("\npersistent_peers "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"85ef06cb86aa501cceb9ed0a497a02503f5aa57f@<IP address>:26656"')]),a._v("\n")])])]),s("p",[a._v("Start the node:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("digitaloceand start\n")])])]),s("p",[a._v("You can use a tool like gex to see if you are connected to a node. You can install gex on your remote and local machine. Run this command at a terminal window on each machine:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("go get -u github.com/cosmos/gex\n")])])]),s("p",[a._v("Afterward gex is installed, start the gex tool with:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("gex\n")])])]),s("p",[a._v("When "),s("code",[a._v("1")]),a._v(" shows in the "),s("code",[a._v("Connected Peers")]),a._v(" box, then everything is setup successfully.")]),a._v(" "),s("h2",{attrs:{id:"access-api-and-rpc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-api-and-rpc"}},[a._v("#")]),a._v(" Access API and RPC")]),a._v(" "),s("p",[a._v("Now, you can access the API. The Swagger documentation is available at:")]),a._v(" "),s("p",[s("code",[a._v("http://<IP address>:1317")])]),a._v(" "),s("p",[a._v("While the RPC is available on:")]),a._v(" "),s("p",[s("code",[a._v("http://<IP address>:26657")])]),a._v(" "),s("h2",{attrs:{id:"optional-set-up-a-firewall-on-your-droplet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#optional-set-up-a-firewall-on-your-droplet"}},[a._v("#")]),a._v(" Optional: Set Up a Firewall on Your Droplet")]),a._v(" "),s("p",[a._v("To reduce load and attacks to your droplet, you can set up a firewall.")]),a._v(" "),s("p",[a._v("Although DigitalOcean provides a nice UI for creating a firewall, this tutorial uses a general approach with the "),s("code",[a._v("ufw")]),a._v(" command.")]),a._v(" "),s("p",[a._v("Use the "),s("code",[a._v("ufw")]),a._v(" command to block everything that is not related to your blockchain app.")]),a._v(" "),s("p",[a._v("Setup the following rules for "),s("code",[a._v("ufw")]),a._v(" to make it work with your blockchain app:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" ufw default deny incoming\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" ufw default allow outgoing\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" ufw allow OpenSSH\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" ufw allow "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v("/tcp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" ufw allow "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("443")]),a._v("/tcp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" ufw allow "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("60000")]),a._v(":61000/udp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" ufw allow "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("26657")]),a._v("/tcp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" ufw allow "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1317")]),a._v("/tcp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" ufw allow "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v("/tcp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" ufw --force "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);