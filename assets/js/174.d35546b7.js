(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{764:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"building-our-pofe-blockchain-using-starport"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#building-our-pofe-blockchain-using-starport"}},[t._v("#")]),t._v(" Building our PoFE blockchain using Starport")]),t._v(" "),s("p",[t._v("We can scaffold our application by running "),s("code",[t._v("starport app github.com/user/pofe")]),t._v(". This creates a new folder called "),s("code",[t._v("pofe")]),t._v(" which contains the code for your app.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("starport app github.com/user/pofe --sdk-version launchpad\n")])])]),s("h2",{attrs:{id:"run-application"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-application"}},[t._v("#")]),t._v(" Run application")]),t._v(" "),s("p",[t._v("After scaffolding our application, let's open up a separate terminal window in the newly created "),s("code",[t._v("pofe")]),t._v(" folder and run "),s("code",[t._v("starport serve")]),t._v(", which will start our application. Here, you should be able to see the following output, as well as any errors that might show up in your application.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ starport serve\nCosmos' version is: Launchpad\n\nüì¶ Installing dependencies...\nüõ†Ô∏è  Building the app...\nüôÇ Created an account. Password (mnemonic): joy manage firm arrange finish bounce power shove bring bundle issue chief quiz spread symptom sword slender vote hobby water weird trim panther slot\nüôÇ Created an account. Password (mnemonic): meat skirt slab smart impulse region clump genuine zero clog version father spray midnight tip poem input fantasy decide buddy work strategy nest shaft\nüåç Running a Cosmos 'pofe' app with Tendermint at http://localhost:26657.\nüåç Running a server at http://localhost:1317 (LCD)\n\nüöÄ Get started: http://localhost:12345/\n")])])]),s("p",[s("em",[t._v("Note: use")]),t._v(" "),s("code",[t._v("starport serve --verbose")]),t._v(" "),s("em",[t._v("to visualize detailed operations happening in the background")])]),t._v(" "),s("h2",{attrs:{id:"creating-our-claim-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-our-claim-type"}},[t._v("#")]),t._v(" Creating our "),s("code",[t._v("Claim")]),t._v(" type")]),t._v(" "),s("p",[t._v("Open a new terminal inside the "),s("code",[t._v("pofe")]),t._v(" directory and create a type called "),s("code",[t._v("claim")]),t._v(" with the field "),s("code",[t._v("proof")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("starport "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" claim proof:string\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("üéâ Created a "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("claim"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),s("p",[t._v("This creates the "),s("code",[t._v("claim")]),t._v(" type, as well as adding its relevant CLI commands, handlers, messages, type, queriers, and keepers.")]),t._v(" "),s("p",[t._v("At this point, we have a working application - you can verify this by checking the output of the secondary terminal window.")]),t._v(" "),s("p",[t._v("However, we want to modify our application so it better fits our requirements.")]),t._v(" "),s("h2",{attrs:{id:"modifying-our-application"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#modifying-our-application"}},[t._v("#")]),t._v(" Modifying our application")]),t._v(" "),s("p",[t._v("We want to implement an interface that allows someone to hash a file and submit the hash to the blockchain, without directly uploading its contents. We'll be implementing this via the CLI in "),s("code",[t._v("./x/pofe/client/cli/txClaim.go")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"x-pofe-client-cli-txclaim-go"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#x-pofe-client-cli-txclaim-go"}},[t._v("#")]),t._v(" "),s("code",[t._v("x/pofe/client/cli/txClaim.go")])]),t._v(" "),s("p",[t._v("First, make sure to add the import of the following packages:")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" cli\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"crypto/sha256"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"encoding/hex"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io/ioutil"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Next, we want to update our "),s("code",[t._v("GetCmdCreateClaim")]),t._v(" function so it looks as follows:")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CLI transaction command to create a claim")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetCmdCreateClaim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cdc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("codec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Codec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cobra"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("cobra"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tUse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"create-claim [path-to-file]"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tShort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Creates a new claim from a path to a file"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  cobra"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MinimumNArgs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tRunE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cobra"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// accept a filepath, read the file, and hash it")]),t._v("\n\t\t\thasher "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" sha256"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\ts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" ioutil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ReadFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\thasher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\targsProof "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" hex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("EncodeToString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// automatically scaffolded by `starport type`")]),t._v("\n\t\t\tcliCtx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewCLIContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WithCodec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cdc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tinBuf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" bufio"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("InOrStdin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\ttxBldr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" auth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewTxBuilderFromCLI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inBuf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WithTxEncoder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetTxEncoder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cdc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tmsg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewMsgCreateClaim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cliCtx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetFromAddress")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argsProof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\terr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ValidateBasic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" err\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GenerateOrBroadcastMsgs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cliCtx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" txBldr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("sdk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("We can keep the "),s("code",[t._v("GetCmdSetClaim")]),t._v(" and "),s("code",[t._v("GetCmdDeleteClaim")]),t._v(" functions as is.")]),t._v(" "),s("p",[t._v("Lastly, instead of using the auto-generated uuid "),s("code",[t._v("ID")]),t._v(" as our key, we will be using the "),s("code",[t._v("Proof")]),t._v(" value in our struct instead. This will make it a lot easier to query an occurrence of "),s("code",[t._v("Proof")]),t._v(" in our database. We can start by modifying the "),s("code",[t._v("CreateClaim")]),t._v(" method in our "),s("code",[t._v("./x/pofe/keeper/claim.go")]),t._v(" file, as well as all other relevant files that use "),s("code",[t._v("claim.ID")]),t._v(", to use "),s("code",[t._v("claim.Proof")]),t._v(" instead of "),s("code",[t._v("claim.ID")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"x-pofe-keeper-claim-go"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#x-pofe-keeper-claim-go"}},[t._v("#")]),t._v(" "),s("code",[t._v("x/pofe/keeper/claim.go")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k Keeper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateClaim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx sdk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" claim types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Claim"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tstore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("KVStore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storeKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tkey "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ClaimPrefix "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" claim"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Proof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tvalue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cdc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MustMarshalBinaryLengthPrefixed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("claim"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tstore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("In order to import types.Claim from the kepper, we have to edit our "),s("code",[t._v("handlerMsgCreateClaim.go")]),t._v(" file in")]),t._v(" "),s("h3",{attrs:{id:"x-pofe-handermsgcreateclaim-go"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#x-pofe-handermsgcreateclaim-go"}},[t._v("#")]),t._v(" "),s("code",[t._v("x/pofe/handerMsgCreateClaim.go")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" pofe\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tsdk "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/cosmos/cosmos-sdk/types"')]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/user/pofe/x/pofe/keeper"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/user/pofe/x/pofe/types"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleMsgCreateClaim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx sdk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k keeper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keeper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MsgCreateClaim"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sdk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" claim "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Claim"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tCreator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Creator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tProof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Proof"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateClaim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" claim"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("sdk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Events"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("EventManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Events")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"submit-a-proof-of-file-existence-claim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submit-a-proof-of-file-existence-claim"}},[t._v("#")]),t._v(" Submit a Proof of File Existence claim")]),t._v(" "),s("p",[t._v("Once there are no more errors to run through, we can start submitting claims on our blockchain!")]),t._v(" "),s("p",[t._v("Let's start with the easiest one - let's say we want to prove that we made this blockchain.")]),t._v(" "),s("p",[t._v("When we run "),s("code",[t._v("starport serve")]),t._v(", we're also building the application to a binary called "),s("code",[t._v("pofed")]),t._v(", so we can use this file to submit a claim:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pofecli tx pofe create-claim $(which pofed) --from user1\n")])])]),s("p",[t._v("After confirming the transaction, run:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pofecli q pofe list-claim\n")])])]),s("p",[t._v("You should see an output like this:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('[\n  {\n    "creator": "cosmos165hphx98d767c99gtm0n7gevq2q0nwrg75pfkd",\n    "proof": "534f056e58115dd106d026e00da22a32f8c776a0cd5b3dd6431598d73b5f623c"\n  }\n]\n')])])]),s("p",[t._v("Congratulations! Your claim is now on the blockchain, proving you built this app!")]),t._v(" "),s("p",[t._v("If you ever want to remove or delete the claim, you can simply run the command by - of course - replacing the proof:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pofecli tx pofe delete-claim 534f056e58115dd106d026e00da22a32f8c776a0cd5b3dd6431598d73b5f623c --from user1\n")])])]),s("p",[t._v("In the next section, we will be implementing a user interface in vue for our application.")])])}),[],!1,null,null,null);a.default=e.exports}}]);