(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{775:function(t,e,s){"use strict";s.r(e);var n=s(1),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"codec-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#codec-file"}},[t._v("#")]),t._v(" Codec File")]),t._v(" "),s("p",[t._v("To "),s("a",{attrs:{href:"https://github.com/tendermint/go-amino#registering-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("register your types with Amino"),s("OutboundLink")],1),t._v(" so that they can be encoded/decoded, there is a bit of code that needs to be placed in "),s("code",[t._v("./x/nameservice/types/codec.go")]),t._v(". Any interface you create and any struct that implements an interface needs to be declared in the "),s("code",[t._v("RegisterCodec")]),t._v(" function. In this module the three "),s("code",[t._v("Msg")]),t._v(" implementations ("),s("code",[t._v("SetName")]),t._v(", "),s("code",[t._v("BuyName")]),t._v(" and "),s("code",[t._v("DeleteName")]),t._v(") have been registered, but your "),s("code",[t._v("Whois")]),t._v(" query return type needs to be registered.")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" types\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/cosmos/cosmos-sdk/codec"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RegisterCodec registers concrete types on codec")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RegisterCodec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cdc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("codec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Codec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this line is used by starport scaffolding # 1")]),t._v("\n\tcdc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RegisterConcrete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MsgBuyName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nameservice/BuyName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tcdc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RegisterConcrete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MsgSetName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nameservice/SetName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tcdc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RegisterConcrete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MsgDeleteName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nameservice/DeleteName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ModuleCdc defines the module codec")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ModuleCdc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("codec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Codec\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tModuleCdc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" codec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RegisterCodec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ModuleCdc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tcodec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RegisterCrypto")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ModuleCdc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tModuleCdc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Seal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"next-you-need-to-define-cli-interactions-with-your-module"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#next-you-need-to-define-cli-interactions-with-your-module"}},[t._v("#")]),t._v(" Next you need to define CLI interactions with your module.")])])}),[],!1,null,null,null);e.default=a.exports}}]);