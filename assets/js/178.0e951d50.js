(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{803:function(e,a,o){"use strict";o.r(a);var t=o(1),c=Object(t.a)({},(function(){var e=this,a=e.$createElement,o=e._self._c||a;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"scaffolding"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#scaffolding"}},[e._v("#")]),e._v(" Scaffolding")]),e._v(" "),o("p",[e._v("We'll be using a CLI tool called "),o("a",{attrs:{href:"https://github.com/tendermint/starport",target:"_blank",rel:"noopener noreferrer"}},[e._v("Starport"),o("OutboundLink")],1),e._v(" to create a new Cosmos SDK blockchain. To use "),o("code",[e._v("starport")]),e._v(" "),o("a",{attrs:{href:"https://docs.starport.network/guide/install.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("install it"),o("OutboundLink")],1),e._v(" on your local machine:")]),e._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"Y3VybCBodHRwczovL2dldC5zdGFycG9ydC5uZXR3b3JrL3N0YXJwb3J0QHYwLjE3LjAhIHwgYmFzaAo="}}),e._v(" "),o("p",[e._v("Scaffold a new Cosmos SDK blockchain using the "),o("code",[e._v("starport scaffold chain")]),e._v(" command. The command accepts one argument: the Go module path that will be used for the project.")]),e._v(" "),o("p",[e._v("By default a chain is scaffolded with a new empty Cosmos SDK module. Use the "),o("code",[e._v("--no-module")]),e._v(" flag to skip module scaffolding.")]),e._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"c3RhcnBvcnQgc2NhZmZvbGQgY2hhaW4gZ2l0aHViLmNvbS9jb3Ntb25hdXQvc2NhdmVuZ2UgLS1uby1tb2R1bGUK"}}),e._v(" "),o("p",[e._v("This command created a new directory "),o("code",[e._v("scavenge")]),e._v(" with a brand new Cosmos SDK blockchain. This blockchain doesn't have any application-specific logic yet, but it imports standard Cosmos SDK modules, such as "),o("code",[e._v("auth")]),e._v(", "),o("code",[e._v("bank")]),e._v(", "),o("code",[e._v("mint")]),e._v(" and others.")]),e._v(" "),o("p",[e._v("Change the current directory to "),o("code",[e._v("scavenge")]),e._v(":")]),e._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"Y2Qgc2NhdmVuZ2UK"}}),e._v(" "),o("p",[e._v("Inside the project directory you can execute other Starport commands to start a blockchain node, scaffold modules, messages, types, generate code, and much more.")]),e._v(" "),o("p",[e._v("In a Cosmos SDK blockchain, application-specific logic is implemented in separate modules. Using modules keeps code easy to understand and reuse.")]),e._v(" "),o("p",[e._v("Scaffold a new module called "),o("code",[e._v("scavenge")]),e._v(". Based on our design the "),o("code",[e._v("scavenge")]),e._v(" module will be sending tokens between participants. Sending tokens is implemented in the standard "),o("code",[e._v("bank")]),e._v(" module. Specify "),o("code",[e._v("bank")]),e._v(" as a dependency using the optional "),o("code",[e._v("--dep")]),e._v(" flag.")]),e._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"c3RhcnBvcnQgc2NhZmZvbGQgbW9kdWxlIHNjYXZlbmdlIC0tZGVwIGJhbmsK"}}),e._v(" "),o("p",[e._v("A module has been created in the "),o("code",[e._v("x/scavenge")]),e._v(" directory and imported into the blockchain in "),o("code",[e._v("app/app.go")]),e._v(".")])],1)}),[],!1,null,null,null);a.default=c.exports}}]);