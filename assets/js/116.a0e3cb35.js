(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{810:function(t,a,e){"use strict";e.r(a);var s=e(1),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"gas-metering"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gas-metering"}},[t._v("#")]),t._v(" Gas Metering")]),t._v(" "),e("HighlightBox",{attrs:{type:"synopsis"}},[e("p",[t._v("Make sure you have all you need before proceeding:")]),t._v(" "),e("ul",[e("li",[t._v("You understand the concepts of gas.")]),t._v(" "),e("li",[t._v("Have Go installed.")]),t._v(" "),e("li",[t._v("The checkers blockchain codebase with the game wager and its handling. You can get there by following the "),e("RouterLink",{attrs:{to:"/academy/4-my-own-chain/game-wager.html"}},[t._v("previous steps")]),t._v(" or checking out the "),e("a",{attrs:{href:"https://github.com/cosmos/b9-checkers-academy-draft/tree/game-wager",target:"_blank",rel:"noopener noreferrer"}},[t._v("relevant version"),e("OutboundLink")],1),t._v(".")],1)])]),t._v(" "),e("p",[t._v("Players can start playing checkers with your Cosmos blockchain. Transaction fees are paid by players themselves, at least the fee related to transporting the serialized bytes and the other gas-metered parts like "),e("code",[t._v("bank")]),t._v(".")]),t._v(" "),e("p",[t._v("Next add your own gas metering to reflect the costs that different transactions impose or you can add costs to discourage spam.")]),t._v(" "),e("h2",{attrs:{id:"new-information"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#new-information"}},[t._v("#")]),t._v(" New information")]),t._v(" "),e("p",[t._v("These values are an inspiration but you can set your own. Save them as new constants:")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    CreateGameGas "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    PlayMoveGas   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    RejectGameGas "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"add-handling"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add-handling"}},[t._v("#")]),t._v(" Add handling")]),t._v(" "),e("p",[t._v("Add a line that consumes the designated amount of gas in each relevant handler:")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("When handling a game creation:")]),t._v(" "),e("div",{staticClass:"language-go [https://github.com/cosmos/b9-checkers-academy-draft/blob/76abedcf3ad3f4e5186435e153e6ed0d18630a73/x/checkers/keeper/msg_server_create_game.go#L41] extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[t._v("ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("GasMeter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ConsumeGas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("types"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CreateGameGas"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Create game"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("When handling a move:")]),t._v(" "),e("div",{staticClass:"language-go [https://github.com/cosmos/b9-checkers-academy-draft/blob/76abedcf3ad3f4e5186435e153e6ed0d18630a73/x/checkers/keeper/msg_server_play_move.go#L90] extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[t._v("ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("GasMeter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ConsumeGas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("types"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PlayMoveGas"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Play a move"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("When handling a game rejection:")]),t._v(" "),e("div",{staticClass:"language-go [https://github.com/cosmos/b9-checkers-academy-draft/blob/76abedcf3ad3f4e5186435e153e6ed0d18630a73/x/checkers/keeper/msg_server_reject_game.go#L52] extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[t._v("ctx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("GasMeter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ConsumeGas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("types"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RejectGameGas"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Reject game"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),e("p",[t._v("You don't meter gas in your "),e("code",[t._v("EndBlock")]),t._v(" handler because it is called by a player sending a transaction. It is instead a service rendered by the network. If you want to account for the gas cost of an expiration, you have to devise a way to pre-collect it as part of the other messages.")]),t._v(" "),e("HighlightBox",{attrs:{type:"tip"}},[e("p",[t._v("Avoid calling "),e("code",[t._v("ConsumeGas")]),t._v(" from within a loop. If you know the number of times your code loops, consume all the gas ahead of the loop. With this trick the transaction may run out of gas as if you had run the steps if the signer had not sent enough gas. This strategy saves computations on your node.")])]),t._v(" "),e("h2",{attrs:{id:"next-up"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#next-up"}},[t._v("#")]),t._v(" Next up")]),t._v(" "),e("p",[t._v("Make your checkers blockchain more user-friendly by helping players avoid bad transactions via a query that tests a move. Just follow the exercise in the "),e("RouterLink",{attrs:{to:"/academy/4-my-own-chain/can-play.html"}},[t._v("next section")]),t._v(".")],1)],1)}),[],!1,null,null,null);a.default=n.exports}}]);